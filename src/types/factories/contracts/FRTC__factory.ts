/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FRTC, FRTCInterface } from "../../contracts/FRTC";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_defaultAdmin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_depositAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_managementFeePerSecond",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_performanceFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_hurdleRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketSpread",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minDeposit",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "totalValue",
        type: "uint256",
      },
    ],
    name: "DepositsCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TokenMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TokenPurchaseRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "collectDeposits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hurdleRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "investmentsState",
    outputs: [
      {
        internalType: "enum FRTC.InvestmentsState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationsState",
    outputs: [
      {
        internalType: "enum FRTC.LiquidationsState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "managementFeePerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketSpread",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minWithdrawal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenEntryPrice",
        type: "uint256",
      },
    ],
    name: "mintPendingInvestments",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "performanceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_depositAddress",
        type: "address",
      },
    ],
    name: "setDepositAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeOwner",
        type: "address",
      },
    ],
    name: "setFeeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_hurdleRate",
        type: "uint256",
      },
    ],
    name: "setHurdleRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_managementFeePerSecond",
        type: "uint256",
      },
    ],
    name: "setManagementFeePerSecond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_marketSpread",
        type: "uint256",
      },
    ],
    name: "setMarketSpread",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minDeposit",
        type: "uint256",
      },
    ],
    name: "setMinMaticDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_performanceFee",
        type: "uint256",
      },
    ],
    name: "setPerformanceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526006805461ffff191690553480156200001c57600080fd5b5060405162001f1a38038062001f1a8339810160408190526200003f9162000297565b604080518082018252601581527f467269646f6d20546f702043757272656e6369657300000000000000000000006020808301918252835180850190945260048452634652544360e01b908401528151919291620000a091600391620001d4565b508051620000b6906004906020840190620001d4565b50620000c89150600090508962000120565b6006805462010000600160b01b031916620100006001600160a01b03998a1602179055600780546001600160a01b0319169690971695909517909555600892909255600955600a55600b91909155601155506200034e565b6200012c828262000130565b5050565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff166200012c5760008281526005602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620001903390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b828054620001e29062000312565b90600052602060002090601f01602090048101928262000206576000855562000251565b82601f106200022157805160ff191683800117855562000251565b8280016001018555821562000251579182015b828111156200025157825182559160200191906001019062000234565b506200025f92915062000263565b5090565b5b808211156200025f576000815560010162000264565b80516001600160a01b03811681146200029257600080fd5b919050565b600080600080600080600080610100898b031215620002b557600080fd5b620002c0896200027a565b9750620002d060208a016200027a565b9650620002e060408a016200027a565b9550606089015194506080890151935060a0890151925060c0890151915060e089015190509295985092959890939650565b600181811c908216806200032757607f821691505b6020821081036200034857634e487b7160e01b600052602260045260246000fd5b50919050565b611bbc806200035e6000396000f3fe6080604052600436106102bb5760003560e01c806370897b231161016e578063a457c2d7116100cb578063d547741f1161007f578063ec71f4ce11610064578063ec71f4ce14610778578063eeb5f21f14610798578063f9abb1f1146107b857600080fd5b8063d547741f14610712578063dd62ed3e1461073257600080fd5b8063a9059cbb116100b0578063a9059cbb146106ac578063ab18af27146106cc578063b9818be1146106ec57600080fd5b8063a457c2d714610684578063a6f2ae3a146106a457600080fd5b8063853567e61161012257806391d148541161010757806391d148541461061457806395d89b411461065a578063a217fddf1461066f57600080fd5b8063853567e6146105de57806387788782146105fe57600080fd5b80637ff9b596116101535780637ff9b5961461059c5780638297f431146105b25780638500b2d8146105c857600080fd5b806370897b231461055c57806370a082311461057c57600080fd5b80632e0c8c5e1161021c5780633ccfd60b116101d05780634b104eff116101b55780634b104eff1461050d57806356e22d0f1461052d57806363b951a51461054257600080fd5b80633ccfd60b146104e257806341b3d185146104f757600080fd5b8063313ce56711610201578063313ce5671461048657806336568abe146104a257806339509351146104c257600080fd5b80632e0c8c5e146104465780632f2ff15d1461046657600080fd5b806318160ddd1161027357806323b872dd1161025857806323b872dd146103be578063248a9ca3146103de57806328f833b71461040e57600080fd5b806318160ddd146103875780631c2da4e41461039c57600080fd5b806308ca65cf116102a457806308ca65cf14610317578063095ea7b31461033b5780630b4e84ea1461035b57600080fd5b806301ffc9a7146102c057806306fdde03146102f5575b600080fd5b3480156102cc57600080fd5b506102e06102db366004611836565b6107ce565b60405190151581526020015b60405180910390f35b34801561030157600080fd5b5061030a610805565b6040516102ec919061188c565b34801561032357600080fd5b5061032d600b5481565b6040519081526020016102ec565b34801561034757600080fd5b506102e06103563660046118db565b610897565b34801561036757600080fd5b5060065461037a90610100900460ff1681565b6040516102ec919061193c565b34801561039357600080fd5b5060025461032d565b3480156103a857600080fd5b506103bc6103b736600461194f565b6108af565b005b3480156103ca57600080fd5b506102e06103d9366004611968565b6108c1565b3480156103ea57600080fd5b5061032d6103f936600461194f565b60009081526005602052604090206001015490565b34801561041a57600080fd5b5060075461042e906001600160a01b031681565b6040516001600160a01b0390911681526020016102ec565b34801561045257600080fd5b506103bc61046136600461194f565b6108e5565b34801561047257600080fd5b506103bc6104813660046119a4565b6108f7565b34801561049257600080fd5b50604051601281526020016102ec565b3480156104ae57600080fd5b506103bc6104bd3660046119a4565b610922565b3480156104ce57600080fd5b506102e06104dd3660046118db565b6109b3565b3480156104ee57600080fd5b506103bc6109f2565b34801561050357600080fd5b5061032d60115481565b34801561051957600080fd5b506103bc6105283660046119d0565b610a36565b34801561053957600080fd5b506103bc610a83565b34801561054e57600080fd5b5060065461037a9060ff1681565b34801561056857600080fd5b506103bc61057736600461194f565b610c2a565b34801561058857600080fd5b5061032d6105973660046119d0565b610c3c565b3480156105a857600080fd5b5061032d60105481565b3480156105be57600080fd5b5061032d600a5481565b3480156105d457600080fd5b5061032d60085481565b3480156105ea57600080fd5b506103bc6105f936600461194f565b610c52565b34801561060a57600080fd5b5061032d60095481565b34801561062057600080fd5b506102e061062f3660046119a4565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b34801561066657600080fd5b5061030a610c64565b34801561067b57600080fd5b5061032d600081565b34801561069057600080fd5b506102e061069f3660046118db565b610c73565b6103bc610d1d565b3480156106b857600080fd5b506102e06106c73660046118db565b610e86565b3480156106d857600080fd5b506103bc6106e73660046119d0565b610e94565b3480156106f857600080fd5b5060065461042e906201000090046001600160a01b031681565b34801561071e57600080fd5b506103bc61072d3660046119a4565b610ec3565b34801561073e57600080fd5b5061032d61074d3660046119eb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561078457600080fd5b506103bc61079336600461194f565b610ee9565b3480156107a457600080fd5b506103bc6107b336600461194f565b610efb565b3480156107c457600080fd5b5061032d60125481565b60006001600160e01b03198216637965db0b60e01b14806107ff57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606003805461081490611a15565b80601f016020809104026020016040519081016040528092919081815260200182805461084090611a15565b801561088d5780601f106108625761010080835404028352916020019161088d565b820191906000526020600020905b81548152906001019060200180831161087057829003601f168201915b5050505050905090565b6000336108a581858561104f565b5060019392505050565b60006108bb8133611173565b50601155565b6000336108cf8582856111f3565b6108da858585611285565b506001949350505050565b60006108f18133611173565b50600b55565b6000828152600560205260409020600101546109138133611173565b61091d8383611482565b505050565b6001600160a01b03811633146109a55760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b6109af8282611524565b5050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906108a590829086906109ed908790611a65565b61104f565b336000818152600c6020526040808220600401805490839055905190929183156108fc02918491818181858888f193505050501580156109af573d6000803e3d6000fd5b6000610a428133611173565b50600680546001600160a01b0390921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055565b6000610a8f8133611173565b600060065460ff166001811115610aa857610aa8611905565b14610af55760405162461bcd60e51b815260206004820152601660248201527f4e6f7420696e2074686520726967687420737461746500000000000000000000604482015260640161099c565b600d546000908190610b0990600190611a7d565b90505b6000600d8281548110610b2157610b21611a94565b60009182526020808320909101546001600160a01b0316808352600c909152604090912054909150610b539084611a65565b6001600160a01b0382166000908152600c602052604081208054600190910180549396509092909190610b87908490611a65565b9091555050600e8054600181019091557fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0180546001600160a01b0319166001600160a01b0383169081179091556000908152600c6020526040812055600d805480610bf557610bf5611aaa565b600082815260209020810160001990810180546001600160a01b03191690550190555080610c2281611ac0565b915050610b0c565b6000610c368133611173565b50600955565b6000610c4782610c3c565b6107ff906005611ad7565b6000610c5e8133611173565b50600a55565b60606004805461081490611a15565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610d105760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161099c565b6108da828686840361104f565b601154341015610d6f5760405162461bcd60e51b815260206004820152601260248201527f4e6f7420656e6f756768206465706f7369740000000000000000000000000000604482015260640161099c565b6000621e8480600b5434610d839190611ad7565b610d8d9190611af6565b336000908152600c602052604081205491925003610de857600d80546001810182556000919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50180546001600160a01b031916331790555b610df28134611a7d565b336000908152600c602052604081208054909190610e11908490611a65565b90915550506006546201000090046001600160a01b03166000908152600c602052604081206004018054839290610e49908490611a65565b909155505060405134815233907fea9f1cfffdc9bccecc3cf6bb3eccc40a6979cd4dda52722af70e4fe4e02289d49060200160405180910390a250565b6000336108a5818585611285565b6000610ea08133611173565b50600780546001600160a01b0319166001600160a01b0392909216919091179055565b600082815260056020526040902060010154610edf8133611173565b61091d8383611524565b6000610ef58133611173565b50600855565b6000610f078133611173565b600160065460ff166001811115610f2057610f20611905565b14610f6d5760405162461bcd60e51b815260206004820152601660248201527f4e6f7420696e2074686520726967687420737461746500000000000000000000604482015260640161099c565b600e54600090610f7f90600190611a7d565b90505b6000600e8281548110610f9757610f97611a94565b60009182526020808320909101546001600160a01b0316808352600c90915260408220600101549092508590610fd590670de0b6b3a7640000611ad7565b610fdf9190611af6565b9050610feb82826115a7565b6001600160a01b0382166000908152600c6020526040812060010155600e80548061101857611018611aaa565b600082815260209020810160001990810180546001600160a01b03191690550190555081905061104781611ac0565b915050610f82565b6001600160a01b0383166110b15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161099c565b6001600160a01b0382166111125760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161099c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff166109af576111b1816001600160a01b03166014611686565b6111bc836020611686565b6040516020016111cd929190611b18565b60408051601f198184030181529082905262461bcd60e51b825261099c9160040161188c565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461127f57818110156112725760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161099c565b61127f848484840361104f565b50505050565b6001600160a01b0383166113015760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161099c565b6001600160a01b0382166113635760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161099c565b6001600160a01b038316600090815260208190526040902054818110156113f25760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161099c565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611429908490611a65565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161147591815260200190565b60405180910390a361127f565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff166109af5760008281526005602090815260408083206001600160a01b03851684529091529020805460ff191660011790556114e03390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff16156109af5760008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b0382166115fd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161099c565b806002600082825461160f9190611a65565b90915550506001600160a01b0382166000908152602081905260408120805483929061163c908490611a65565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60606000611695836002611ad7565b6116a0906002611a65565b67ffffffffffffffff8111156116b8576116b8611b99565b6040519080825280601f01601f1916602001820160405280156116e2576020820181803683370190505b509050600360fc1b816000815181106116fd576116fd611a94565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061172c5761172c611a94565b60200101906001600160f81b031916908160001a9053506000611750846002611ad7565b61175b906001611a65565b90505b60018111156117e0577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061179c5761179c611a94565b1a60f81b8282815181106117b2576117b2611a94565b60200101906001600160f81b031916908160001a90535060049490941c936117d981611ac0565b905061175e565b50831561182f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161099c565b9392505050565b60006020828403121561184857600080fd5b81356001600160e01b03198116811461182f57600080fd5b60005b8381101561187b578181015183820152602001611863565b8381111561127f5750506000910152565b60208152600082518060208401526118ab816040850160208701611860565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146118d657600080fd5b919050565b600080604083850312156118ee57600080fd5b6118f7836118bf565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b6002811061193957634e487b7160e01b600052602160045260246000fd5b50565b602081016119498361191b565b91905290565b60006020828403121561196157600080fd5b5035919050565b60008060006060848603121561197d57600080fd5b611986846118bf565b9250611994602085016118bf565b9150604084013590509250925092565b600080604083850312156119b757600080fd5b823591506119c7602084016118bf565b90509250929050565b6000602082840312156119e257600080fd5b61182f826118bf565b600080604083850312156119fe57600080fd5b611a07836118bf565b91506119c7602084016118bf565b600181811c90821680611a2957607f821691505b602082108103611a4957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611a7857611a78611a4f565b500190565b600082821015611a8f57611a8f611a4f565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b600081611acf57611acf611a4f565b506000190190565b6000816000190483118215151615611af157611af1611a4f565b500290565b600082611b1357634e487b7160e01b600052601260045260246000fd5b500490565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611b50816017850160208801611860565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351611b8d816028840160208801611860565b01602801949350505050565b634e487b7160e01b600052604160045260246000fdfea164736f6c634300080d000a";

type FRTCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FRTCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FRTC__factory extends ContractFactory {
  constructor(...args: FRTCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _defaultAdmin: string,
    _feeOwner: string,
    _depositAddress: string,
    _managementFeePerSecond: BigNumberish,
    _performanceFee: BigNumberish,
    _hurdleRate: BigNumberish,
    _marketSpread: BigNumberish,
    _minDeposit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FRTC> {
    return super.deploy(
      _defaultAdmin,
      _feeOwner,
      _depositAddress,
      _managementFeePerSecond,
      _performanceFee,
      _hurdleRate,
      _marketSpread,
      _minDeposit,
      overrides || {}
    ) as Promise<FRTC>;
  }
  override getDeployTransaction(
    _defaultAdmin: string,
    _feeOwner: string,
    _depositAddress: string,
    _managementFeePerSecond: BigNumberish,
    _performanceFee: BigNumberish,
    _hurdleRate: BigNumberish,
    _marketSpread: BigNumberish,
    _minDeposit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _defaultAdmin,
      _feeOwner,
      _depositAddress,
      _managementFeePerSecond,
      _performanceFee,
      _hurdleRate,
      _marketSpread,
      _minDeposit,
      overrides || {}
    );
  }
  override attach(address: string): FRTC {
    return super.attach(address) as FRTC;
  }
  override connect(signer: Signer): FRTC__factory {
    return super.connect(signer) as FRTC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FRTCInterface {
    return new utils.Interface(_abi) as FRTCInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FRTC {
    return new Contract(address, _abi, signerOrProvider) as FRTC;
  }
}
